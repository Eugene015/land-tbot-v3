const { Composer, Markup } = require("telegraf");
const composer = new Composer();

// –ö–æ–º–∞–Ω–¥–∞ /zemleustriy
composer.command("zemleustriy", async (ctx) => {
  try {
    await ctx.replyWithHTML(
      "<b>–û–±–µ—Ä—ñ—Ç—å –≤–∏–¥ –ø–æ—Å–ª—É–≥–∏ –≤ —Ä–æ–∑–¥—ñ–ª—ñ –ó–µ–º–ª–µ—É—Å—Ç—Ä—ñ–πüó∫</b>",
      Markup.inlineKeyboard([
        [Markup.button.callback("–ü—Ä–æ–µ–∫—Ç –≤—ñ–¥–≤–µ–¥–µ–Ω–Ω—è –¥—ñ–ª—è–Ω–∫–∏", "proektVidv")],
        [
          Markup.button.callback(
            "–ó–º—ñ–Ω–∞ —Ü—ñ–ª—å–æ–≤–æ–≥–æ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è",
            "btn_category2"
          ),
        ],
        [
          Markup.button.callback(
            "–ü—Ä–∏—Å–≤–æ—î–Ω–Ω—è –∫–∞–¥–∞—Å—Ç—Ä–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä—É",
            "btn_category3"
          ),
        ],
        [Markup.button.callback("–ü–æ–¥—ñ–ª –∑–µ–º–µ–ª—å–Ω–æ—ó –¥—ñ–ª—è–Ω–∫–∏", "btn_category4")],
        [
          Markup.button.callback(
            "–¢–µ—Ö–Ω—ñ—á–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è (–º–µ–∂—ñ, –ø—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü—ñ—è)",
            "btn_category5"
          ),
        ],
        [Markup.button.callback("–í–Ω–µ—Å–µ–Ω–Ω—è –¥—ñ–ª—è–Ω–∫–∏ –¥–æ –î–ó–ö", "btn_category6")],
        [Markup.button.callback("–û–±–º—ñ–Ω–Ω–∏–π —Ñ–∞–π–ª XML", "btn_category7")],
        [Markup.button.callback("–í–∏—Ç—è–≥ –∑ –∫–∞–¥–∞—Å—Ç—Ä—É", "btn_category8")],
        [
          Markup.button.callback(
            "–ó–Ω—è—Ç—Ç—è —Ä–æ–¥—é—á–æ–≥–æ —à–∞—Ä—É “ë—Ä—É–Ω—Ç—É",
            "btn_category9"
          ),
        ],
        [Markup.button.callback("–ü—Ä–æ–µ–∫—Ç —Å—ñ–≤–æ–∑–º—ñ–Ω–∏", "btn_category10")],
        [Markup.button.callback("–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞", "btn_category11")],
      ])
    );
  } catch (e) {
    console.error(e);
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /geodesy
composer.command("geodesy", async (ctx) => {
  try {
    await ctx.replyWithHTML(
      "<b>–û–±–µ—Ä—ñ—Ç—å –≤–∏–¥ –ø–æ—Å–ª—É–≥–∏ –≤ —Ä–æ–∑–¥—ñ–ª—ñ –ì–µ–æ–¥–µ–∑—ñ—èüó∫</b>",
      Markup.inlineKeyboard([
        [
          Markup.button.callback(
            "–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è (–≤–∏–Ω–æ—Å) –º–µ–∂ –¥—ñ–ª—è–Ω–∫–∏",
            "vinosMezh"
          ),
        ],
        [Markup.button.callback("–¢–æ–ø–æ–≥—Ä–∞—Ñ—ñ—á–Ω–∞ –∑–π–æ–º–∫–∞", "topo_zyomka")],
        [Markup.button.callback("–ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∞ –∑–π–æ–º–∫–∞", "kad_zyomka")],
      ])
    );
  } catch (e) {
    console.error(e);
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /prbti
composer.command("prbti", async (ctx) => {
  try {
    await ctx.replyWithHTML(
      "<b>–û–±–µ—Ä—ñ—Ç—å –≤–∏–¥ —Ä–æ–±—ñ—Ç –≤ –ø–µ—Ä–µ–ª—ñ–∫—É –Ω–∏–∂—á–µ</b>",
      Markup.inlineKeyboard([
        [Markup.button.callback("–£–∑–∞–∫–æ–Ω–µ–Ω–Ω—è —Å–∞–º–æ–±—É–¥—É", "uzakonennya")],
        [Markup.button.callback("–¢–µ—Ö–Ω—ñ—á–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç", "techpass")],
        [Markup.button.callback("–ë—É–¥—ñ–≤–µ–ª—å–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç", "budpass")],
      ])
    );
  } catch (e) {
    console.error(e);
  }
});

module.exports = composer;
